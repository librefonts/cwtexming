METADATA.json:
  error: []
  failure:
  - autofix: false
    err_msg: DESCRIPTION.en_us.html must have size larger than 500 bytes
    methodDoc: DESCRIPTION.en_us.html is more than 500 bytes
    methodName: test_description_is_more_than_500b
    name: bakery_lint.tests.metadata_test
    tags: [note]
    targets: &id001 [metadata]
    tool: METADATA.json
  - autofix: false
    err_msg: False is not true
    methodDoc: DALTONMAAG.com
    methodName: test_does_not_familyName_exist_in_daltonmaag_catalogue
    name: bakery_lint.tests.metadata_test
    tags: [note]
    targets: *id001
    tool: METADATA.json
  - autofix: false
    err_msg: False is not true
    methodDoc: FONTBUREAU.com
    methodName: test_does_not_familyName_exist_in_fontbureau_catalogue
    name: bakery_lint.tests.metadata_test
    tags: [note]
    targets: *id001
    tool: METADATA.json
  - autofix: false
    err_msg: False is not true
    methodDoc: FONTSHOP.com
    methodName: test_does_not_familyName_exist_in_fontshop_catalogue
    name: bakery_lint.tests.metadata_test
    tags: [note]
    targets: *id001
    tool: METADATA.json
  - autofix: false
    err_msg: False is not true
    methodDoc: MYFONTS.com
    methodName: test_does_not_familyName_exist_in_myfonts_catalogue
    name: bakery_lint.tests.metadata_test
    tags: [note]
    targets: *id001
    tool: METADATA.json
  - autofix: false
    err_msg: False is not true
    methodDoc: VEER.com
    methodName: test_does_not_familyName_exist_in_veer_catalogue
    name: bakery_lint.tests.metadata_test
    tags: [note]
    targets: *id001
    tool: METADATA.json
  - autofix: false
    err_msg: No family found in GWF in http://fonts.googleapis.com/css?family=UNKNOWN
    methodDoc: Fontfamily is listed in Google Font Directory
    methodName: test_family_is_listed_in_gwf
    name: bakery_lint.tests.metadata_test
    tags: [note]
    targets: *id001
    tool: METADATA.json
  - autofix: false
    err_msg: Subsets missing menu
    methodDoc: METADATA.json subsets should have at least 'menu' and 'latin'
    methodName: test_metadata_atleast_latin_menu_subsets_exist
    name: bakery_lint.tests.metadata_test
    tags: [required]
    targets: *id001
    tool: METADATA.json
  - autofix: false
    err_msg: Field "designer" MUST NOT be empty
    methodDoc: Designer exists in GWF profiles.csv
    methodName: test_metadata_designer_exists_in_profiles_csv
    name: bakery_lint.tests.metadata_test
    tags: [required]
    targets: *id001
    tool: METADATA.json
  - autofix: false
    err_msg: u'' not found in ['Apache2', 'OFL', 'UFL']
    methodDoc: METADATA.json license is 'Apache2', 'UFL' or 'OFL'
    methodName: test_metadata_license
    name: bakery_lint.tests.metadata_test
    tags: [required]
    targets: *id001
    tool: METADATA.json
  - autofix: false
    err_msg: name key type invalid
    methodDoc: METADATA.json should have proper top keys types
    methodName: test_metadata_top_keys_types
    name: bakery_lint.tests.metadata_test
    tags: [required]
    targets: *id001
    tool: METADATA.json
  - autofix: false
    err_msg: False is not true
    methodDoc: According GWF standarts font should have Regular style.
    methodName: test_metadata_font_have_regular
    name: bakery_lint.tests.downstream.test_metadata_agreements
    tags: [note]
    targets: &id002 [metadata]
    tool: lint
  - autofix: false
    err_msg: METADATA.json does not contain Regular font. At least one font must be
      Regular and its weight must be 400
    methodDoc: Regular should be 400
    methodName: test_metadata_regular_is_400
    name: bakery_lint.tests.downstream.test_metadata_agreements
    tags: [required]
    targets: *id002
    tool: lint
  - autofix: false
    err_msg: False is not true
    methodDoc: Usually Regular should be normal style
    methodName: test_metadata_regular_is_normal
    name: bakery_lint.tests.downstream.test_metadata_agreements
    tags: [note]
    targets: *id002
    tool: lint
  - autofix: false
    err_msg: '[''COPYRIGHT.txt''] does not exist in project'
    methodDoc: Font folder should contains COPYRIGHT.txt
    methodName: test_copyrighttxt_exists
    name: bakery_lint.tests.downstream.test_check_text_files_exist
    tags: [required]
    targets: &id003 [metadata]
    tool: lint
  - autofix: false
    err_msg: '[''FONTLOG.txt''] does not exist in project'
    methodDoc: Font folder should contains FONTLOG.txt
    methodName: test_fontlogtxt_exists
    name: bakery_lint.tests.downstream.test_check_text_files_exist
    tags: [note]
    targets: *id003
    tool: lint
  - autofix: false
    err_msg: '[''LICENSE.txt'', ''OFL.txt''] does not exist in project'
    methodDoc: Font folder should contains LICENSE.txt
    methodName: test_licensetxt_exists
    name: bakery_lint.tests.downstream.test_check_text_files_exist
    tags: [required]
    targets: *id003
    tool: lint
  fixed: []
  passed: false
  success:
  - autofix: false
    err_msg: ''
    methodDoc: DESCRIPTION.en_us.html is not real html file
    methodName: test_description_is_valid_html
    name: bakery_lint.tests.metadata_test
    tags: [note]
    targets: *id001
    tool: METADATA.json
  - autofix: false
    err_msg: ''
    methodDoc: FONTS.com
    methodName: test_does_not_familyName_exist_in_fontscom_catalogue
    name: bakery_lint.tests.metadata_test
    tags: [note]
    targets: *id001
    tool: METADATA.json
  - autofix: false
    err_msg: ''
    methodDoc: FONTSMITH.com
    methodName: test_does_not_familyName_exist_in_fontsmith_catalogue
    name: bakery_lint.tests.metadata_test
    tags: [note]
    targets: *id001
    tool: METADATA.json
  - autofix: false
    err_msg: ''
    methodDoc: HOUSEIND.com
    methodName: test_does_not_familyName_exist_in_houseind_catalogue
    name: bakery_lint.tests.metadata_test
    tags: [note]
    targets: *id001
    tool: METADATA.json
  - autofix: false
    err_msg: ''
    methodDoc: METADATA.json fonts key items are dicts
    methodName: test_metadata_fonts_items_dicts
    name: bakery_lint.tests.metadata_test
    tags: [required]
    targets: *id001
    tool: METADATA.json
  - autofix: false
    err_msg: ''
    methodDoc: METADATA.json font key should be list
    methodName: test_metadata_fonts_key_list
    name: bakery_lint.tests.metadata_test
    tags: [required]
    targets: *id001
    tool: METADATA.json
  - autofix: false
    err_msg: ''
    methodDoc: METADATA.json fonts propery only should have uniq values
    methodName: test_metadata_fonts_no_dupes
    name: bakery_lint.tests.metadata_test
    tags: [note]
    targets: *id001
    tool: METADATA.json
  - autofix: false
    err_msg: ''
    methodDoc: METADATA.json only contains unique style:weight pairs
    methodName: test_metadata_has_unique_style_weight_pairs
    name: bakery_lint.tests.metadata_test
    tags: [required]
    targets: *id001
    tool: METADATA.json
  - autofix: false
    err_msg: ''
    methodDoc: 'METADATA.json should have top keys: ["name", "designer", "license",
      "visibility", "category", "size", "dateAdded", "fonts", "subsets"]'
    methodName: test_metadata_keys
    name: bakery_lint.tests.metadata_test
    tags: [required]
    targets: *id001
    tool: METADATA.json
  - autofix: false
    err_msg: ''
    methodDoc: METADATA.json don't have unknown top keys
    methodName: test_metadata_no_unknown_top_keys
    name: bakery_lint.tests.metadata_test
    tags: [required]
    targets: *id001
    tool: METADATA.json
  - autofix: false
    err_msg: ''
    methodDoc: METADATA.json subsets key should be list
    methodName: test_metadata_subsets_key_list
    name: bakery_lint.tests.metadata_test
    tags: [required]
    targets: *id001
    tool: METADATA.json
  - autofix: false
    err_msg: ''
    methodDoc: Check that corresponding subset files exist for fonts
    methodName: test_check_subsets_exists
    name: bakery_lint.tests.downstream.test_check_subsets_exists
    tags: [note]
    targets: [metadata]
    tool: lint
  - autofix: false
    err_msg: ''
    methodDoc: METADATA.json fonts 'name' property should be same as font familyname
    methodName: test_font_name_matches_family
    name: bakery_lint.tests.downstream.test_metadata_agreements
    tags: [note]
    targets: *id002
    tool: lint
  - autofix: false
    err_msg: ''
    methodDoc: Font and METADATA.json have the same name
    methodName: test_metadata_family
    name: bakery_lint.tests.downstream.test_metadata_agreements
    tags: [required]
    targets: *id002
    tool: lint
  - autofix: false
    err_msg: ''
    methodDoc: Check that METADATA family values are all the same
    methodName: test_metadata_family_values_are_all_the_same
    name: bakery_lint.tests.downstream.test_metadata_agreements
    tags: [note]
    targets: *id002
    tool: lint
  - autofix: false
    err_msg: ''
    methodDoc: METADATA.json `filename` matches `postScriptName`
    methodName: test_metadata_filename_matches_postScriptName
    name: bakery_lint.tests.downstream.test_metadata_agreements
    tags: [required]
    targets: *id002
    tool: lint
  - autofix: false
    err_msg: ''
    methodDoc: METADATA.json fonts items fields "name", "postScriptName", "fullName",
      "filename" contains font name right format
    methodName: test_metadata_fonts_fields_have_fontname
    name: bakery_lint.tests.downstream.test_metadata_agreements
    tags: [note]
    targets: *id002
    tool: lint
  - autofix: false
    err_msg: ''
    methodDoc: METADATA.json 'fullname' value matches internal 'fullname'
    methodName: test_metadata_fullname_is_equal_to_internal_font_fullname
    name: bakery_lint.tests.downstream.test_metadata_agreements
    tags: [note]
    targets: *id002
    tool: lint
  - autofix: false
    err_msg: ''
    methodDoc: METADATA.json `fullName` matches `postScriptName`
    methodName: test_metadata_fullname_matches_postScriptName
    name: bakery_lint.tests.downstream.test_metadata_agreements
    tags: [required]
    targets: *id002
    tool: lint
  - autofix: false
    err_msg: ''
    methodDoc: Checks METADATA.json 'postScriptName' matches TTF 'postScriptName'
    methodName: test_metadata_postScriptName_matches_ttf_fontname
    name: bakery_lint.tests.downstream.test_metadata_agreements
    tags: [required]
    targets: *id002
    tool: lint
  - autofix: false
    err_msg: ''
    methodDoc: Monospace font has hhea.advanceWidthMax equal to each glyph advanceWidth
    methodName: test_check_monospace_agreement
    name: bakery_lint.tests.downstream.test_check_monospace_agreements
    tags: [note]
    targets: [metadata]
    tool: lint
  - autofix: false
    err_msg: ''
    methodDoc: Check that weights have canonical value
    methodName: test_check_canonical_weights
    name: bakery_lint.tests.downstream.test_check_canonical_weights
    tags: [note]
    targets: metadata
    tool: lint
  - autofix: false
    err_msg: ''
    methodDoc: Metadata weight matches postScriptName
    methodName: test_postscriptname_contains_correct_weight
    name: bakery_lint.tests.downstream.test_check_canonical_weights
    tags: [note]
    targets: metadata
    tool: lint
  - autofix: false
    err_msg: ''
    methodDoc: Font weight matches metadata.json value of key "weight"
    methodName: test_font_weight_same_as_in_metadata
    name: bakery_lint.tests.downstream.test_check_canonical_weights
    tags: [note]
    targets: metadata
    tool: lint
  - autofix: false
    err_msg: ''
    methodDoc: METADATA.json should contains testing font, under canonic name
    methodName: test_metadata_contains_current_font
    name: bakery_lint.tests.downstream.test_check_canonical_weights
    tags: [note]
    targets: metadata
    tool: lint
  - autofix: false
    err_msg: ''
    methodDoc: None
    methodName: test_check_metadata_matches_nametable
    name: bakery_lint.tests.downstream.test_check_metadata_matches_nametable
    tags: [note]
    targets: [metadata]
    tool: lint
  - autofix: false
    err_msg: ''
    methodDoc: Check fonts have corresponding menu files
    methodName: test_menu_file_agreement
    name: bakery_lint.tests.downstream.test_check_files_menu_agreements
    tags: [required]
    targets: [metadata]
    tool: lint
  - autofix: false
    err_msg: ''
    methodDoc: Check if fontname is not camel cased
    methodName: test_fontname_not_in_camel_case
    name: bakery_lint.tests.downstream.test_check_font_name_not_in_camelcase
    tags: [note]
    targets: [metadata]
    tool: lint
  - autofix: false
    err_msg: ''
    methodDoc: Test If font styles are canonical
    methodName: test_check_canonical_styles
    name: bakery_lint.tests.downstream.test_check_canonical_styles
    tags: [note]
    targets: [metadata]
    tool: lint
  - autofix: false
    err_msg: ''
    methodDoc: Check METADATA.json "fonts" property items have required field
    methodName: test_check_metadata_fields
    name: bakery_lint.tests.downstream.test_check_metadata_fields
    tags: [required]
    targets: [metadata]
    tool: lint
  - autofix: false
    err_msg: ''
    methodDoc: Test If filename is canonical
    methodName: test_check_canonical_filenames
    name: bakery_lint.tests.downstream.test_check_canonical_filenames
    tags: [required]
    targets: [metadata]
    tool: Lint
  - autofix: false
    err_msg: ''
    methodDoc: Check font name is the same as family name
    methodName: test_check_familyname_matches_fontnames
    name: bakery_lint.tests.downstream.test_check_familyname_matches_fontnames
    tags: [note]
    targets: [metadata]
    tool: lint
  - autofix: false
    err_msg: ''
    methodDoc: The same unicode encodings of glyphs across family?
    methodName: test_the_same_encodings_of_glyphs_across_family
    name: bakery_lint.tests.downstream.test_check_glyph_consistency
    tags: [note]
    targets: &id004 [metadata]
    tool: lint
  - autofix: false
    err_msg: ''
    methodDoc: The same names of glyphs across family?
    methodName: test_the_same_names_of_glyphs_across_family
    name: bakery_lint.tests.downstream.test_check_glyph_consistency
    tags: [note]
    targets: *id004
    tool: lint
  - autofix: false
    err_msg: ''
    methodDoc: The same number of glyphs across family?
    methodName: test_the_same_number_of_glyphs_across_family
    name: bakery_lint.tests.downstream.test_check_glyph_consistency
    tags: [note]
    targets: *id004
    tool: lint
  - autofix: false
    err_msg: ''
    methodDoc: Check metadata.json font.style `italic` matches font internal
    methodName: test_check_italic_style_matches_names
    name: bakery_lint.tests.downstream.test_check_metadata_style_matches_names
    tags: [note]
    targets: [metadata]
    tool: lint
  - autofix: false
    err_msg: ''
    methodDoc: Check metadata.json font.style `italic` matches font internal
    methodName: test_check_normal_style_matches_names
    name: bakery_lint.tests.downstream.test_check_metadata_style_matches_names
    tags: [note]
    targets: [metadata]
    tool: lint
  - autofix: false
    err_msg: ''
    methodDoc: Check menu file contains proper glyphs
    methodName: test_check_menu_contains_proper_glyphs
    name: bakery_lint.tests.downstream.test_check_menu_contains_proper_glyphs
    tags: [note]
    targets: [metadata]
    tool: lint
  - autofix: false
    err_msg: ''
    methodDoc: Copyright string contains "Reserved File Name"
    methodName: test_copyright_contains_correct_rfn
    name: bakery_lint.tests.downstream.test_metadata_font_copyright
    tags: [required, info]
    targets: metadata
    tool: lint
  - autofix: false
    err_msg: ''
    methodDoc: METADATA.json fonts copyright string is the same for all items
    methodName: test_copyright_is_consistent_across_family
    name: bakery_lint.tests.downstream.test_metadata_font_copyright
    tags: [required]
    targets: metadata
    tool: lint
  - autofix: false
    err_msg: ''
    methodDoc: Copyright string matches to Copyright * 20\d\d * (*@*.*)
    methodName: test_copyright_matches_pattern
    name: bakery_lint.tests.downstream.test_metadata_font_copyright
    tags: [required]
    targets: metadata
    tool: lint
  - autofix: false
    err_msg: ''
    methodDoc: Copyright string should be less than 500 chars
    methodName: test_metadata_copyright_size
    name: bakery_lint.tests.downstream.test_metadata_font_copyright
    tags: [required]
    targets: metadata
    tool: lint
  - autofix: false
    err_msg: ''
    methodDoc: Font folder should contains DESCRIPTION.en_us.html
    methodName: test_description_exists
    name: bakery_lint.tests.downstream.test_check_text_files_exist
    tags: [required]
    targets: *id003
    tool: lint
